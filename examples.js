#!/usr/bin/env node

/**
 * Example s·ª≠ d·ª•ng TaskTracker CLI
 * Ch·∫°y: node examples.js
 */

const { exec } = require('child_process');
const path = require('path');

const cliPath = path.join(__dirname, 'index.js');

function runCommand(command) {
    return new Promise((resolve, reject) => {
        exec(`node ${cliPath} ${command}`, (error, stdout, stderr) => {
            if (error) {
                reject(error);
                return;
            }
            resolve(stdout);
        });
    });
}

async function demo() {
    console.log('üöÄ TaskTracker CLI Demo\n');
    
    try {
        // Th√™m tasks
        console.log('1. Th√™m c√°c tasks m·ªõi...');
        await runCommand('add "Ho√†n th√†nh d·ª± √°n web"');
        await runCommand('add "ƒê·ªçc s√°ch Clean Code"');
        await runCommand('add "H·ªçc TypeScript"');
        await runCommand('add "Vi·∫øt blog v·ªÅ Node.js"');
        
        // Li·ªát k√™ t·∫•t c·∫£
        console.log('\n2. Danh s√°ch t·∫•t c·∫£ tasks:');
        const allTasks = await runCommand('list');
        console.log(allTasks);
        
        // ƒê√°nh d·∫•u m·ªôt s·ªë tasks
        console.log('3. C·∫≠p nh·∫≠t tr·∫°ng th√°i...');
        await runCommand('mark-in-progress 1');
        await runCommand('mark-done 2');
        
        // C·∫≠p nh·∫≠t m√¥ t·∫£
        await runCommand('update 3 "H·ªçc TypeScript t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao"');
        
        // Li·ªát k√™ theo tr·∫°ng th√°i
        console.log('\n4. Tasks ƒëang th·ª±c hi·ªán:');
        const inProgress = await runCommand('list-in-progress');
        console.log(inProgress);
        
        console.log('5. Tasks ƒë√£ ho√†n th√†nh:');
        const done = await runCommand('list-done');
        console.log(done);
        
        console.log('6. Tasks ch∆∞a l√†m:');
        const todo = await runCommand('list-todo');
        console.log(todo);
        
        console.log('\n‚úÖ Demo ho√†n th√†nh!');
        console.log('\nC√°c l·ªánh kh·∫£ d·ª•ng:');
        const help = await runCommand('--help');
        console.log(help);
        
    } catch (error) {
        console.error('‚ùå L·ªói:', error.message);
    }
}

// Ch·∫°y demo
if (require.main === module) {
    demo();
}

module.exports = { demo };
